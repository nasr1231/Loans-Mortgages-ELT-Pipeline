services:
# Setting Up HDFS & YARN #  
  airflow-init:
    image: mrugankray/namenode-spark-airflow-flume-zepplin:1.1
    container_name: ELT_Loan_airflow-init
    depends_on:
      external_postgres_db:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:user1234@external_postgres_db:5432/airflow
    healthcheck:
      test: ["CMD-SHELL", "airflow db check"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s  
    entrypoint: /bin/bash
    command: >
      -c "airflow db init && airflow users create --username admin --firstname Mohamed --lastname Nasr --role Admin --email admin@example.com --password admin && echo 'âœ… Airflow user created successfully!'"
   
  namenode:
    image: mrugankray/namenode-spark-airflow-flume-zepplin:1.1
    container_name: ELT_Loan_namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
      - 8082:8082 # zeppelin ui
      - 8080:8080 # spark master web ui
      - 8081:8081 # spark slave web ui
      - 4040:4040 # spark driver web ui
      - 3000:3000 # airflow ui
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - hadoop_namenode_conda:/root/anaconda
      - hadoop_namenode_spark:/opt/spark
      - hadoop_namenode_zeppelin:/opt/zeppelin      
      - ./configs/zeppelin-site.xml:/opt/zeppelin/conf/zeppelin-site.xml
      - ./configs/zeppelin-env.sh:/opt/zeppelin/conf/zeppelin-env.sh
      - ./configs/namenode_bashrc.txt:/root/.bashrc
      - ./configs/namenode_airflow.cfg:/root/airflow/airflow.cfg
      - ./dags:/root/airflow/dags
      - airflow_namenode:/root/airflow
      - ./configs/namenode/flume/flume-env.sh:/opt/flume/conf/flume-env.sh
      - ./flume_config/flume.conf:/opt/flume/conf/flume.conf
      - hadoop_namenode_flume:/opt/flume
    environment:
      - CLUSTER_NAME=hadoop-learning
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:user1234@external_postgres_db:5432/airflow
    env_file:
      - ./hadoop.env
    depends_on:
      airflow-init:
        condition: service_healthy
      external_postgres_db:
        condition: service_healthy

  datanode:
    image: mrugankray/datanode-python:1.0
    container_name: ELT_Loan_datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - hadoop_datanode_conda:/root/anaconda
      - ./configs/datanode_bashrc.txt:/root/.bashrc
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: "hdfs://namenode:9000"
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: mrugankray/resourcemanager-python:1.0
    container_name: ELT_Loan_resourcemanager
    restart: always
    volumes:
      - hadoop_resourcemanager_conda:/root/anaconda
      - ./configs/resourcemanager_bashrc.txt:/root/.bashrc
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    ports:
      - "8088:8088"
    env_file:
      - ./hadoop.env

  nodemanager:
    image: mrugankray/nodemanager-python:1.0
    container_name: ELT_Loan_nodemanager
    restart: always
    volumes:
      - hadoop_nodemanager_conda:/root/anaconda
      - ./configs/nodemanager_bashrc.txt:/root/.bashrc
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    ports:
      - "8042:8042"
      - "19888:19888" # to access job history
    env_file:
      - ./hadoop.env  

## Setting up Hive 
  hive-server:
    image: mrugankray/hive-server-sqoop:1.0
    container_name: ELT_Loan_hive-server
    depends_on:
      - namenode
      - datanode
      - hive-metastore
    env_file:
      - ./hadoop.env
    volumes:
      - hadoop_hive_server_sqoop:/usr/lib/sqoop
      - ./configs/hive_server/sqoop-env.sh:/usr/lib/sqoop/conf/sqoop-env.sh
      - ./configs/hive_server/hive_server_bashrc.txt:/root/.bashrc
      - ./configs/hive_server/sqoop-site.xml:/usr/lib/sqoop/conf/sqoop-site.xml
      - ./configs/hive_server/sshd_config.conf:/etc/ssh/sshd_config
      - ./Scripts/Hive-DWH-DDL.sql:/etc/Hive-DWH-DDL.sql
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - 10000:10000

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: ELT_Loan_hive-metastore
    env_file:
      - ./hadoop.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    depends_on:
      - hive-metastore-postgresql

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: ELT_Loan_hive-metastore-postgresql
    volumes:
      - hive_metastore_db:/var/lib/postgresql/data

# Hue #
  huedb:
    image: postgres:15.1-alpine3.17
    container_name: ELT_Loan_huedb
    volumes:
      - hue_pg_data:/var/lib/postgresql/data
    env_file:
      - ./hadoop.env
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432 hive-metastore:9083 hive-server:10000 resourcemanager:8088"
      POSTGRES_USER: hue
      POSTGRES_PASSWORD: hue
      POSTGRES_DB: hue

  hue:
    image: gethue/hue:4.6.0
    container_name: ELT_Loan_hue
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 hive-metastore-postgresql:5432 hive-metastore:9083 hive-server:10000 resourcemanager:8088"
    ports:
      - "8888:8888"
    env_file:
      - ./hadoop.env
    volumes:
      - ./hue-overrides.ini:/usr/share/hue/desktop/conf/hue-overrides.ini
    depends_on:
      - huedb

# NiFi
  nifi:
    image: apache/nifi:1.27.0
    container_name: ELT_Loan_nifi
    ports:
      - "8085:8080"   # NiFi UI
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_WEB_HTTP_HOST=0.0.0.0    
    volumes:      
      - ./docker_image_conf/nifi:/opt/nifi/drivers
      - nifi_data:/opt/nifi/nifi-current/data      
      - ./configs/hadoop_conf:/opt/hadoop/conf
    depends_on:
      - namenode      
      - external_postgres_db

# Setup external DB & pgadmin
  external_postgres_db:
    image: postgres:15.1-alpine3.17
    container_name: external_postgres_db
    volumes:
      - external_postgres_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user1234
      POSTGRES_DB: airflow     

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d airflow -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  
  external_pgadmin:
    image: dpage/pgadmin4:6.18
    container_name: ELT_Loan_external_pgadmin
    ports:
      - "5000:80"
    environment:
      - "PGADMIN_DEFAULT_EMAIL=pgadmin@admin.com"
      - "PGADMIN_DEFAULT_PASSWORD=admin"
    depends_on:
      - external_postgres_db

  #######################
  # Metabase
  #######################
  metabase:
    image: metabase/metabase:v0.48.7
    container_name: ELT_Loan_metabase
    restart: always
    ports:
      - "3001:3000"    # Metabase UI
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=airflow
      - MB_DB_PORT=5432
      - MB_DB_USER=user
      - MB_DB_PASS=user1234
      - MB_DB_HOST=external_postgres_db
    depends_on:
      - external_postgres_db
      - hive-server
    volumes:
      - ./drivers/hive:/plugins
      - metabase_data:/metabase-data

volumes:
  hadoop_namenode:
  hadoop_namenode_conda:
  hadoop_namenode_spark:
  hadoop_namenode_zeppelin:
  hadoop_namenode_flume:
  hadoop_datanode:
  hadoop_datanode_conda:
  hadoop_resourcemanager_conda:
  hadoop_nodemanager_conda:  
  hadoop_hive_server_sqoop:
  hue_pg_data:
  external_postgres_db_data:
  airflow_namenode:
  hive_metastore_db:
  nifi_data:
  metabase_data: